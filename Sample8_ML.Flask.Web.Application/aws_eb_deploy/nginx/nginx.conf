
events {
    worker_connections 1024;
    multi_accept on;
}

http {

    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    log_format healthd '$msec"$uri"$status"$request_time"$upstream_response_time"$http_x_forwarded_for"';

    # Ensure the access log is written to the healthd log directory
    access_log /var/log/nginx/healthd/access.log healthd;

    # Define upstream server(s)
    upstream app {
        server app:5000;  # Use the service name and port
    }

     server {
        listen 80;
        server_name andrewodrain.com www.andrewodrain.com;

        location /health {
            proxy_pass http://app/health;  # Directly proxy_pass to your Flask health route
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location / {
            proxy_pass http://app;  # Use the upstream name for the rest of the paths
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
    }




