services:
  app:
    build:
      context: ./app
      dockerfile: Dockerfile.app
    image: andrewodrain/web-applications:app-v0.0.2
    container_name: app_container
    volumes:
      - app-volume:/app
      - static-volume:/app/static
    env_file:
      - ./app/app_container.env
    depends_on:
      - psql
      - redis
      - celery

  celery:
    build:
      context: ./app
      dockerfile: Dockerfile.celery
    image: andrewodrain/web-applications:celery-v0.0.2
    container_name: celery_container
    volumes:
      - app-volume:/app
    env_file:
      - ./app/celery_container.env
    depends_on:
      - redis

  redis:
    build:
      context: ./redis_database
    image: andrewodrain/web-applications:redis-v0.0.2
    container_name: redis_container
    env_file:
      - ./redis_database/redis_container.env

  cron:
    build:
      context: ./cron
    container_name: cron_container
    image: andrewodrain/web-applications:cron-v0.0.2
    volumes:
      - aws-ips:/etc/nginx/modsecurity/aws_ips
    env_file:
      - ./cron/cron_container.env
    depends_on:
      - nginx

  nginx:
    build:
      context: ./nginx
    container_name: nginx_container
    image: andrewodrain/web-applications:nginx-v0.0.2
    volumes:
      - static-volume:/usr/share/nginx/html/static
      - aws-ips:/etc/nginx/modsecurity/aws_ips
    env_file:
      - ./nginx/nginx_container.env
    ports:
      - "80:80"
    depends_on:
      - app

  psql:
    build:
      context: ./database
    container_name: psql_container
    image: andrewodrain/web-applications:psql-v0.0.2
    volumes:
      - psql-data:/var/lib/postgresql/data
    env_file:
      - ./database/psql_container.env

volumes:
  app-volume: { }
  static-volume: { }
  aws-ips: { }
  psql-data: { }



